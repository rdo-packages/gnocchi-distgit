{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "4e7d4421_c314d773",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 128
      },
      "writtenOn": "2022-10-07T08:23:03Z",
      "side": 1,
      "message": "From the logs, it\u0027s pulling python3-sqlalchemy13:\n\n2022-10-07 07:47:12.467360 | rdo-centos-stream | 2022-10-07 07:47:12,467 INFO:dlrn-build-mock:DEBUG:   Installing       : python3-sqlalchemy13-1.3.24-2.el9s.x86_64            2/144",
      "revId": "5dabb319a483778c4423a403d174a94f8057e7a1",
      "serverId": "270e2033-b340-4cff-9539-693957ebf0e7"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8bbc46c0_7174d07e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 128
      },
      "writtenOn": "2022-10-07T08:31:05Z",
      "side": 1,
      "message": "For the record, wrt upgrade path. If we try to install a package which requires sqlalchemy \u003c 1.3 in a host where python3-sqlalchemy-1.4 from base repo has been installed before, we\u0027ll need to add the option --allowerasing as installing python3-sqlalchemy13 is not seen as a downgrade (allowed by default) but as a new package installation which conflicts with existing python3-sqlalchemy-1.4. Adding --allowerasing it works fine. I think we will not hit this issue in a real deployment or containers builds unless we are getting python3-sqlalchemy-1.4 installed in a base container which I think it\u0027s not the case.",
      "revId": "5dabb319a483778c4423a403d174a94f8057e7a1",
      "serverId": "270e2033-b340-4cff-9539-693957ebf0e7"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "907e6954_13caacd5",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 657
      },
      "writtenOn": "2022-10-07T08:48:46Z",
      "side": 1,
      "message": "Agreed. I think it would only be a concern if a previous version of ours actually used python-sqlalchemy-1.4 and so we were expecting to upgrade from that. Which is not the case.\n\nWhen it comes to container images, even if we missed capping the version in a package installed in base images (or if 1.4 got pulled in via a dependency of a dependency) and then tried to install 1.3 in an image downstream of that, this Requires would result in an image build failure which would be detected right away and could be fixed -- as opposed to quietly delivering broken content.\n\nI think that covers all our bases so we should be good to go.",
      "parentUuid": "8bbc46c0_7174d07e",
      "revId": "5dabb319a483778c4423a403d174a94f8057e7a1",
      "serverId": "270e2033-b340-4cff-9539-693957ebf0e7"
    }
  ]
}